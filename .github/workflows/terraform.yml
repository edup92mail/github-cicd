name: terraform

on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      account_name:
        required: true
        type: string
      account_id:
        required: true
        type: string
      account_region:
        required: true
        type: string
      slack_bot_token:
        required: true
        type: string
      slack_channel_id:
        required: true
        type: string
      deploy_keys:
        required: true
        type: string
    outputs:
      TerraformOutput:
        value: ${{ jobs.Terraform.outputs.TerraformOutput }}

permissions:
  id-token: write
  contents: read
      
jobs:
  
  artifact:
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Generate backend.tf
        run: |
          cat <<EOF > backend.tf
          terraform {
            backend "s3" {
              bucket = "${{ inputs.account_id }}"
              key    = "state.tfstate"
              region = "${{ inputs.account_region }}"
            }
          }
          EOF
      - name: Append Project String > variables.tfvars
        run: echo "project_name = \"${{ inputs.account_name }}\"" >> variables.tfvars
      - name: Append Repo String > variables.tfvars
        run: echo "repo_name = \"$(basename \"$GITHUB_REPOSITORY\")\"" >> variables.tfvars
      - name: Cargar claves SSH en el agente
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ inputs.deploy_keys }}
      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ inputs.account_id }}:role/${{ inputs.account_id }}"
          aws-region: ${{ inputs.account_region }}
      - name: Terraform Init
        run: terraform init
      - name: Upload Terraform files
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: |
            backend.tf
            variables.tfvars
            .terraform/
            .terraform.lock.hcl

  test:
    runs-on: "ubuntu-latest"
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.path }}
    needs: [artifact]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ inputs.account_id }}:role/${{ inputs.account_id }}"
          aws-region: ${{ inputs.account_region }}
      - name: Restore artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
      - name: Terraform Validate
        id: TERRAFORM_VALIDATE
        run: terraform validate
        timeout-minutes: 1
      - name: Post failed to slack
        uses: slackapi/slack-github-action@v2.1.0
        if: steps.TERRAFORM_VALIDATE.outcome == 'failure'
        with:
          method: chat.postMessage
          token: ${{ inputs.slack_bot_token }}
          payload: |
            channel: ${{ inputs.slack_channel_id }}
            text: "Terraform Validate Failed"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "Terraform Validate Failed"
      - name: Stop Run
        if: steps.TERRAFORM_VALIDATE.outcome == 'failure'
        run: |
          echo "Terraform Validate failed, stopping Workflow"
          exit 1

  approbal:
    runs-on: "ubuntu-latest"
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.path }}
    needs: [artifact, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ inputs.account_id }}:role/${{ inputs.account_id }}"
          aws-region: ${{ inputs.account_region }}
      - name: Restore artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
      - name: Terraform Plan
        run: terraform plan -no-color -input=false -detailed-exitcode -out=plan.tfplan
        timeout-minutes: 1
      - name: Terraform diff
        id: TERRAFORM_DIFF
        run: |
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          terraform show -no-color plan.tfplan >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Post Approbal to Slack
        uses: slackapi/slack-github-action@v2.1.0
        id: SLACK_APPROBAL
        env:
          ACCOUNT_NAME: ${{ inputs.account_name }}
          TERRAFORM_DIFF: ${{ steps.TERRAFORM_DIFF.outputs.diff }}
          RUN_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        with:
          method: chat.postMessage
          token: ${{ inputs.slack_bot_token }}
          payload: |
            channel: ${{ inputs.slack_channel_id }}
            text: "Terraform Plan"
            blocks:
              - type: header
                text:
                  type: plain_text
                  text: "üöÄ CiCd needs approbal for path '$ACCOUNT_NAME'"
                  emoji: true
              - type: section
                text:
                  type: mrkdwn
                  text: "*üì¶ Repository:* '$REPO'"
              - type: section
                text:
                  type: mrkdwn
                  text: |-
                    *Terraform Plan Diff:*
                    ```bash
                    $TERRAFORM_DIFF
                    ```
              - type: actions
                elements:
                  - type: button
                    text:
                      type: plain_text
                      text: "üîó View full Workflow Job"
                      emoji: true
                    url: "'$RUN_URL'"
              - type: section
                text:
                  type: mrkdwn
                  text: "‚úÖ To approve Job answer `ok` to this thread"
      - name: Wait for slack approbe
        id: SLACK_WAITER
        env:
          CHANNEL_ID: ${{ inputs.slack_channel_id }}
          SLACK_TOKEN: ${{ inputs.slack_bot_token }}
          TS: ${{ steps.SLACK_APPROBAL.outputs.ts }}
        run: |

          for i in {1..60}; do

            echo "‚åõ Waiting for approbal"
            sleep 3

            WATCHER=$(curl -s -G "https://slack.com/api/conversations.replies" \
              -H "Authorization: Bearer $SLACK_TOKEN" \
              --data-urlencode "channel=$CHANNEL_ID" \
              --data-urlencode "ts=$TS")

            if echo "$WATCHER" | jq -r '.messages[]?.text' | grep -i -q '^ok$'; then
              echo "üü¢ Got Approbal"
              exit 0
            fi
          done

          echo "‚è∞ Approbal Timeout"
      - name: Post job approbed to slack
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ inputs.slack_bot_token }}
          payload: |
            channel: ${{ inputs.slack_channel_id }}
            text: "Got Approbal, Job continues"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "@everyone üü¢ *Got Approbal, Job continues*"
      - name: Post failed to slack
        uses: slackapi/slack-github-action@v2.1.0
        if: steps.SLACK_WAITER.outcome == 'failure'
        with:
          method: chat.postMessage
          token: ${{ inputs.slack_bot_token }}
          payload: |
            channel: ${{ inputs.slack_channel_id }}
            text: "Approbal Timeout, Job Canceled"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "@everyone ‚è∞ *Approbal Timeout, Job cancelled*"
      - name: Stop Run
        if: steps.SLACK_WAITER.outcome == 'failure'
        run: |
          echo "Slack Waiter failed, stopping Workflow"
          exit 1

  deploy:
    runs-on: "ubuntu-latest"
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.path }}
    needs: [artifact, test, approbal]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ inputs.account_id }}:role/${{ inputs.account_id }}"
          aws-region: ${{ inputs.account_region }}
      - name: Restore artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
      - name: Terraform Apply
        run: terraform apply -auto-approve      
      - name: Post Success to Slack
        uses: slackapi/slack-github-action@v2.1.0
        env:
          ACCOUNT_NAME: ${{ inputs.account_name }}
          RUN_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        with:
          method: chat.postMessage
          token: ${{ inputs.slack_bot_token }}
          payload: |
            channel: ${{ inputs.slack_channel_id }}
            text: "Terraform Apply OK"
            blocks:
              - type: header
                text:
                  type: plain_text
                  text: "üöÄ CiCd OK for path '$ACCOUNT_NAME'"
                  emoji: true
              - type: section
                text:
                  type: mrkdwn
                  text: "*üì¶ Repository:* '$REPO'"
              - type: actions
                elements:
                  - type: button
                    text:
                      type: plain_text
                      text: "üîó View full Workflow Job"
                      emoji: true
                    url: "'$RUN_URL'"
